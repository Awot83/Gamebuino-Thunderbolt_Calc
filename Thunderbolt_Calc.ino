#include <SPI.h>
#include <Gamebuino.h>

const byte logo[] PROGMEM = {64, 36, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x9F, 0x4A, 0x59, 0x73, 0xDC, 0xE3, 0x91, 0xF2, 0x9F, 0x4A, 0x5D, 0x4A, 0x12, 0x94, 0x51, 0xF2, 0x84, 0x7A, 0x55, 0x4B, 0xD2, 0x94, 0x50, 0x42, 0x84, 0x7A, 0x55, 0x4A, 0x1C, 0xE4, 0x50, 0x42, 0x84, 0x4A, 0x55, 0x4A, 0x1E, 0x94, 0x50, 0x42, 0x84, 0x4B, 0xD7, 0x4A, 0x12, 0x94, 0x50, 0x42, 0x84, 0x4B, 0xD3, 0x73, 0xD2, 0xE3, 0x9E, 0x42, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x40, 0x79, 0x91, 0xE0, 0x10, 0x10, 0x0, 0x40, 0x40, 0x43, 0xD1, 0x0, 0x10, 0x20, 0x0, 0x20, 0x80, 0x42, 0x51, 0x0, 0x10, 0x20, 0x0, 0x7F, 0x0, 0x43, 0xD1, 0x0, 0xC, 0x10, 0x1, 0xC0, 0x0, 0x7A, 0x5D, 0xE8, 0x3, 0xEC, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0xFC, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC0, 0x1C, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xE, 0x3, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x80, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC0, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC3, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x86, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x3C, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xD, 0xE0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3B, 0x0, 0x3F, 0xFF, 0x20, 0xB, 0x80, 0x0, 0x7C, 0x0, 0x26, 0x69, 0x55, 0x55, 0x0, 0x0, 0xF0, 0x0, 0x35, 0xAD, 0x53, 0x89, 0x0, 0x1, 0xC0, 0x0, 0x32, 0x6D, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3F, 0xFF,};
const byte boom[] PROGMEM = {64, 36, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xC2, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0xE6, 0xE0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0x6F, 0xE0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFC, 0x6F, 0xE0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xFC, 0x7B, 0x60, 0x0, 0x0, 0x0, 0x0, 0x1, 0x8F, 0xDB, 0x60, 0xC0, 0x0, 0x0, 0x0, 0x1, 0x8F, 0x9B, 0x60, 0xC0, 0x0, 0x0, 0x0, 0x1, 0xF8, 0x18, 0x61, 0xC0, 0x0, 0x0, 0x0, 0x1C, 0xF8, 0x18, 0x61, 0x80, 0x0, 0x0, 0x0, 0x3E, 0x0, 0x0, 0x7B, 0x80, 0x0, 0x0, 0x0, 0x77, 0xE0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x63, 0xF0, 0x0, 0xF, 0x0, 0x0, 0x0, 0x0, 0x63, 0x30, 0x0, 0xC, 0x0, 0x0, 0x0, 0x0, 0x7F, 0x30, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x7F, 0x30, 0x0, 0x70, 0x0, 0x0, 0x0, 0x0, 0x7F, 0xF0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0, 0x63, 0xF0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,};
const byte lightining[] PROGMEM = {64, 36, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xE0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0xF0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3F, 0xFE, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7F, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x80, 0x0, 0x0, 0x0, 0x0, 0x1, 0xFF, 0xFF, 0xC0, 0x0, 0x0, 0x0, 0x0, 0xF, 0xFF, 0xFF, 0xC0, 0x0, 0x0, 0x0, 0x0, 0x1F, 0xFB, 0xF7, 0xF8, 0x0, 0x0, 0x0, 0x0, 0x3F, 0xFF, 0xFF, 0xFC, 0x0, 0x0, 0x0, 0x0, 0x6F, 0xFF, 0xFF, 0xF6, 0x0, 0x0, 0x0, 0x0, 0xDF, 0xFF, 0xFF, 0xFA, 0x0, 0x0, 0x0, 0x0, 0xDF, 0xFB, 0xF7, 0xFA, 0x0, 0x0, 0x0, 0x0, 0x6F, 0xFC, 0xF, 0xF6, 0x0, 0x0, 0x0, 0x0, 0x3F, 0xFF, 0xFF, 0xFC, 0x0, 0x0, 0x0, 0x0, 0x7, 0xFF, 0xFF, 0xE0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1F, 0xFC, 0x8, 0x0, 0x0, 0x0, 0x0, 0x2, 0xC, 0x12, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46, 0x8, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x4, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0x82, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x81, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x88, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x32, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1A, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xC, 0x0, 0x0, 0x0, 0x0, 0x0,};


Gamebuino gb;

extern const byte font3x3[]; //a really tiny font
int ThunderState;
float SoundSpeed = 340.29;
float ThunderTemp = 0;
float Thunder1 = 0;
float Thunder2 = 0;   //
float Thunder3 = 0;     //
float Thunder4 = 0;   //
int x = 0;   //
int y = 0;
int i = 0;
int j = 0;
int tempThund1 = 0;   //
int tempThund2 = 0;
int tempThundTemp = 0;
float temp = 0;
int initialValue = 0;

void setup() {
  gb.begin();
  gb.titleScreen(F(""), logo);
  gb.battery.show = false;
}

void loop() {
  if (gb.update()) {



    // exit game
    if (gb.buttons.pressed(BTN_C)) {
      setup();
    }

    gb.display.drawRect(1, 6, 43, 39);
    gb.display.drawLine(44,38,LCDWIDTH ,38 );
    if (x == 0) {
      gb.display.cursorX = 3;
      gb.display.cursorY = 10;
      // gb.display.setFont(font3x3);
      gb.display.print("Press A if");
      gb.display.drawBitmap(5, 12, lightining);
      if (gb.buttons.pressed(BTN_A)) {
        x = 1;

      }
    }


    if (x == 1) {
      gb.display.cursorX = 3;
      gb.display.cursorY = 10;
      //   gb.display.setFont(font3x3);
      gb.display.print("Press B if");
      gb.display.drawBitmap(5, 7, boom);
      temp++;
      if (gb.buttons.pressed(BTN_B)) {
        x = 0;


        tempThund2 = temp;
        tempThund1 = tempThundTemp;

        switch (i) {
          case 0:
            Thunder1 = temp / 20 * SoundSpeed;
            temp = 0;
            i++;
            break;
          case 1:
            Thunder2 = temp / 20 * SoundSpeed;
            temp = 0;
            i++;
            initialValue = 1;
            break;

          case 2:
            Thunder3 = temp / 20 * SoundSpeed;
            temp = 0;
            i++;
            break;

          case 3:
            Thunder4 = temp / 20 * SoundSpeed;
            temp = 0;
            i = 0;
            break;

        }

      }
    }



    gb.display.cursorX = 2;
    gb.display.cursorY = 0;
    gb.display.print(temp / 20);
    gb.display.cursorX = 23;
    gb.display.print("Sec");


    gb.display.cursorX = 50;
    gb.display.cursorY = 0;
    gb.display.print(Thunder1);
    gb.display.cursorX = 75;
    gb.display.print("m");


    gb.display.cursorX = 50;
    gb.display.cursorY = 10;
    gb.display.print(Thunder2);
    gb.display.cursorX = 75;
    gb.display.print("m");

    gb.display.cursorX = 50;
    gb.display.cursorY = 20;
    gb.display.print(Thunder3);
    gb.display.cursorX = 75;
    gb.display.print("m");

    gb.display.cursorX = 50;
    gb.display.cursorY = 30;
    gb.display.print(Thunder4);
    gb.display.cursorX = 75;
    gb.display.print("m");
    
 
    ThunderState = tempThund2 - tempThund1;
    tempThundTemp = tempThund2;
    
    gb.display.cursorX = 45;
    gb.display.cursorY = 40;
    //gb.display.setFont(font3x3);
    if (ThunderState > 0) {
      if (initialValue != 0) {
        gb.display.print("Receding>");
      }
    }
    if (ThunderState < 0) {
      if (initialValue != 0) {
        gb.display.print("Approach<");
      }
    }
        if (ThunderState = 0) {
      if (initialValue != 0) {
        gb.display.print("Same =");
      }
    }
  }

}
